package vista;

import aplicacion.Empresa;
import aplicacion.Inversor;
import aplicacion.Regulador;
import aplicacion.Usuario;
import vista.componentes.FuentesGUI;
import vista.componentes.ImagenesGUI;

import javax.swing.*;

public class VRegistro extends javax.swing.JFrame {

    /**
     * Creates new form Registro
     */

    aplicacion.FachadaAplicacion fa;

    public VRegistro(aplicacion.FachadaAplicacion fa) {
        this.fa = fa;
        initComponents();
        configureComponentes();
        setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.setIconImage(ImagenesGUI.getImage("database.png", 128));
        this.setTitle("Mercado de Valores - Iniciar sesión");
    }

    private void configureComponentes() {
        // Configura los componentes introducidos
        botonSalir.configurar(fa, this, null, true);
        ingresoLabel.setFont(FuentesGUI.getFuente(
                FuentesGUI.Modificador.NORMAL, FuentesGUI.Size.TITULO));
        registroLabel.setFont(FuentesGUI.getFuente(
                FuentesGUI.Modificador.NORMAL, FuentesGUI.Size.TITULO));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tipoReg = new javax.swing.JComboBox<>();
        botonCrearSolicitud = new vista.componentes.Boton();
        claveIngresoLabel = new vista.componentes.Etiqueta();
        ingresoLabel = new vista.componentes.Etiqueta();
        telefonoRegLabel = new vista.componentes.Etiqueta();
        registroLabel = new vista.componentes.Etiqueta();
        usuarioIngresoLabel = new vista.componentes.Etiqueta();
        tipoRegLabel = new vista.componentes.Etiqueta();
        nombreRegLabel = new vista.componentes.Etiqueta();
        CIFRegLabel = new vista.componentes.Etiqueta();
        idRegLabel = new vista.componentes.Etiqueta();
        claveRegLabel = new vista.componentes.Etiqueta();
        direccionRegLabel = new vista.componentes.Etiqueta();
        ingresoUsuario = new vista.componentes.TextBox();
        nombreReg = new vista.componentes.TextBox();
        CIFReg = new vista.componentes.TextBox();
        botonAceptarIngreso = new vista.componentes.Boton();
        IDReg = new vista.componentes.TextBox();
        tlfoReg = new vista.componentes.TextBox();
        direccionReg = new vista.componentes.TextBox();
        botonSalir = new vista.componentes.BotonVolver();
        ingresoClave = new vista.componentes.PasswordField();
        claveReg = new vista.componentes.PasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tipoReg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empresa", "Inversor", " " }));
        tipoReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoRegActionPerformed(evt);
            }
        });

        botonCrearSolicitud.setText("Crear solicitud de registro");
        botonCrearSolicitud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solicitarRegistroActionPerformed(evt);
            }
        });

        claveIngresoLabel.setText("Clave:");

        ingresoLabel.setText("Ingreso");

        telefonoRegLabel.setText("Teléfono:");

        registroLabel.setText("Registro");

        usuarioIngresoLabel.setText("Usuario:");

        tipoRegLabel.setText("Tipo:");

        nombreRegLabel.setText("Nombre:");

        CIFRegLabel.setText("CIF/DNI:");

        idRegLabel.setText("ID de usuario:");

        claveRegLabel.setText("Clave:");

        direccionRegLabel.setText("Dirección:");

        ingresoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresoUsuarioActionPerformed(evt);
            }
        });

        nombreReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreRegActionPerformed(evt);
            }
        });

        CIFReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CIFRegActionPerformed(evt);
            }
        });

        botonAceptarIngreso.setText("Aceptar");
        botonAceptarIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarIngresocancelarRegistroActionPerformed(evt);
            }
        });

        IDReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDRegActionPerformed(evt);
            }
        });

        tlfoReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tlfoRegActionPerformed(evt);
            }
        });

        direccionReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                direccionRegActionPerformed(evt);
            }
        });

        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        ingresoClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingresoClaveActionPerformed(evt);
            }
        });

        claveReg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                claveRegActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(248, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ingresoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usuarioIngresoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(botonAceptarIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(claveIngresoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(48, 48, 48)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(ingresoUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(ingresoClave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(direccionRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(claveRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefonoRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CIFRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipoRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(registroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCrearSolicitud, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                    .addComponent(direccionReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IDReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tlfoReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CIFReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreReg, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tipoReg, javax.swing.GroupLayout.Alignment.TRAILING, 0, 386, Short.MAX_VALUE)
                    .addComponent(claveReg, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
                .addGap(225, 225, 225))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(registroLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingresoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(usuarioIngresoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingresoUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(claveIngresoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ingresoClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(CIFReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CIFRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonAceptarIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(telefonoRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tlfoReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(idRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IDReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(claveRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(claveReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(direccionRegLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(direccionReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(botonCrearSolicitud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void solicitarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solicitarRegistroActionPerformed
        // TODO add your handling code here:
        //this.solicitarRegistro();
    }//GEN-LAST:event_solicitarRegistroActionPerformed

    private void tipoRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoRegActionPerformed

    private void botoncancelarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton2cancelarRegistroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boton2cancelarRegistroActionPerformed

    private void ingresoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresoUsuarioActionPerformed

    private void nombreRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombreRegActionPerformed

    private void CIFRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CIFRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CIFRegActionPerformed

    private void botonAceptarIngresocancelarRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarIngresocancelarRegistroActionPerformed
        // TODO add your handling code here:
        this.validarUsuario();
    }//GEN-LAST:event_botonAceptarIngresocancelarRegistroActionPerformed

    private void IDRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDRegActionPerformed

    private void tlfoRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tlfoRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tlfoRegActionPerformed

    private void direccionRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_direccionRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_direccionRegActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonSalirActionPerformed

    private void ingresoClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingresoClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ingresoClaveActionPerformed

    private void claveRegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_claveRegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_claveRegActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private vista.componentes.TextBox CIFReg;
    private vista.componentes.Etiqueta CIFRegLabel;
    private vista.componentes.TextBox IDReg;
    private vista.componentes.Boton botonAceptarIngreso;
    private vista.componentes.Boton botonCrearSolicitud;
    private vista.componentes.BotonVolver botonSalir;
    private vista.componentes.Etiqueta claveIngresoLabel;
    private vista.componentes.PasswordField claveReg;
    private vista.componentes.Etiqueta claveRegLabel;
    private vista.componentes.TextBox direccionReg;
    private vista.componentes.Etiqueta direccionRegLabel;
    private vista.componentes.Etiqueta idRegLabel;
    private vista.componentes.PasswordField ingresoClave;
    private vista.componentes.Etiqueta ingresoLabel;
    private vista.componentes.TextBox ingresoUsuario;
    private vista.componentes.TextBox nombreReg;
    private vista.componentes.Etiqueta nombreRegLabel;
    private vista.componentes.Etiqueta registroLabel;
    private vista.componentes.Etiqueta telefonoRegLabel;
    private javax.swing.JComboBox<String> tipoReg;
    private vista.componentes.Etiqueta tipoRegLabel;
    private vista.componentes.TextBox tlfoReg;
    private vista.componentes.Etiqueta usuarioIngresoLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Valida el usuario a partir de los datos del formulario de ingreso.
     * Abre el menú correspondiente a su tipo y cierra esta ventana si la validación es correcta
     */
    public void validarUsuario() {

        String nombreU, password;
        nombreU = ingresoUsuario.getText();
        password = ingresoClave.getText();
        Usuario user = fa.validarUsuario(ingresoUsuario.getText(), ingresoClave.getText());

        // (No hace falta comprobar si es nulo antes de hacer instanceof)
        if (user instanceof Inversor) {
            fa.menuInversor((Inversor) user);
            System.out.println("Usuario encontrado, es inversor");
            this.dispose();
        } else if (user instanceof Empresa) {
            fa.menuEmpresa((Empresa) user);
            System.out.println("Usuario encontrado, es empresa");
            this.dispose();
        } else if (user instanceof Regulador) {
            fa.menuRegulador((Regulador) user);
            System.out.println("Usuario encontrado, es regulador");
            this.dispose();
        }
    }

    //funcion para registrar un nuevo usuario en la BD. Comprueba que se hayan llenado los campos requeridos
    //para el registro (los not null) antes de pasar al SQL para que la excepcion la gestione el Java sin tener
    //que bajar a BD y fiarte de ella.
    public void solicitarRegistro() {
        Usuario u;
        boolean usuario, inversor, empresa;

        //compruebo si estan vacios los campos que no pueden estar vacios
        if (this.IDReg.getText().isEmpty() || this.claveReg.getText().isEmpty() || this.nombreReg.getText().isEmpty() || this.CIFReg.getText().isEmpty()) {
            fa.muestraExcepcion("Recuerda que los campos de ID, clave, nombre y DNI/CIF no pueden estar vacíos.");//muestro la excepcion y retorno sin hacer nada mas
            return;
        }

        switch (this.tipoReg.getSelectedIndex()) {//switch segun el elemento seleccionado en el combobox
            case 2:
                //si en el comboBox de seleccion de tipo tiene el index 2, es que esta en blanco
                fa.muestraExcepcion("Debes seleccionar el tipo de registro que quieres: empresa o inversor.");//muestro excepcion
                break;
            case 1: {
                //si en el comboBox de selecion de tipo tiene el index 1, es que es inversor
                Inversor i;
                u = new Usuario(this.IDReg.getText(), this.claveReg.getText(), false, false);//creo un nuevo usuario
                usuario = fa.registroUsuario(u);//la funcion registra un usuario en la BD, pero antes de ellos comprueba si hay alguno con el mismo ID. Si lo hay, retorna false y no inserta nada
                if (usuario == false) {//retorno false, por tanto habia ya otro user con la misma id y NO se ha insertado nada
                    fa.muestraExcepcion("El ID de usuario ya está en uso, no se puede realizar el registro.");//muestro excepcion
                } else {//retorno true, por lo que se ha insertado el nuevo usuario
                    //creo el inversor
                    i = new Inversor(this.IDReg.getText(), this.nombreReg.getText(), this.CIFReg.getText(), this.direccionReg.getText(), this.tlfoReg.getText(), 0.0f, false, false);
                    inversor = fa.registroInversor(i);//hace lo mismo que la de registro de usuarios (el comprobar que el id no esta en uso es paranoia, nunca debe estarlo si llegas aqui)
                    if (inversor == false) {//si por alguna razon ignota esta el id en inversor pero no en usuario (literal imposible), lo decimos
                        fa.muestraExcepcion("El ID estaba en uso en inversor.");//muestro excepcion
                    }
                }
                break;
            }
            case 0: {
                //si en el comboBox de selecion de tipo tiene el index 0, es que es empresa
                Empresa e;
                u = new Usuario(this.IDReg.getText(), this.claveReg.getText(), false, false);//creo un nuevo usuario
                usuario = fa.registroUsuario(u);//la funcion registra un usuario en la BD, pero antes de ellos comprueba si hay alguno con el mismo ID. Si lo hay, retorna false y no inserta nada
                if (usuario == false) {//retorno false, por tanto habia ya otro user con la misma id y NO se ha insertado nada
                    fa.muestraExcepcion("El ID de usuario ya está en uso, no se puede realizar el registro.");//muestro excepcion
                } else {//retorno true, por lo que se ha insertado el nuevo usuario
                    //creo la empresa
                    e = new Empresa(this.IDReg.getText(), this.nombreReg.getText(), this.CIFReg.getText(), 0.0f, 0.0f, this.direccionReg.getText(), this.tlfoReg.getText(), false, false);
                    empresa = fa.registroEmpresa(e);//hace lo mismo que la de registro de usuarios (el comprobar que el id no esta en uso es paranoia, nunca debe estarlo si llegas aqui)
                    if (empresa == false) {//si por alguna razon ignota esta el id en empresa pero no en usuario (literal imposible), lo decimos
                        fa.muestraExcepcion("El ID estaba en uso en empresa.");//muestro excepcion
                    }
                }
                break;
            }
            default:
                break;
        }
    }
}
